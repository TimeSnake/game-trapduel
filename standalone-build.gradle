plugins {
  id 'java - base'
  id 'java'
  id 'maven - publish'
}

sourceCompatibility = 1.17
targetCompatibility = 1.17

group = project.group
version = '1.0-SNAPSHOT'
archivesBaseName = 'game-trapduel'
var projectId = 18

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = uri 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
  }
  maven {
    url = uri 'https://papermc.io/repo/repository/maven-public/'
  }
  maven {
    url = uri 'https://repo.maven.apache.org/maven2/'
  }
  maven {
    url git_url + 'api/v4/groups/' + git_group_id + '/-/packages/maven'
    name "TimeSnake"
    credentials {
      username = git_username
      password = git_access_token
    }
  }
}

dependencies {
  compileOnly 'de.timesnake::basic-loungebridge'
  compileOnly 'de.timesnake::basic-game'
  compileOnly 'de.timesnake::basic-bukkit'

  compileOnly 'de.timesnake::database-bukkit'
  compileOnly 'de.timesnake::database-api'

  compileOnly 'de.timesnake::channel-bukkit'
  compileOnly 'de.timesnake::channel-api'

  compileOnly 'de.timesnake::library-game'
  compileOnly 'de.timesnake::library-packets'
  compileOnly 'de.timesnake::library-entities'
  compileOnly 'de.timesnake::library-reflection'
  compileOnly 'de.timesnake::library-extension'
  compileOnly 'de.timesnake::library-basic'
  compileOnly 'de.timesnake::library-chat'
  compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'
  compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'
  compileOnly 'org.spigotmc:spigot:1.19-R0.1-SNAPSHOT'
}

tasks.register('deleteOldPluginJar', Delete) {
  delete fileTree(dir: "${project.plugins_dir}", include: "**/${archivesBaseName}-*.jar")
  onlyIf {
    !jar.state.upToDate
  }
}

tasks.register('copyJarToPlugins', Copy) {
  from jar
  into project.plugins_dir
  onlyIf {
    !jar.state.upToDate
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

tasks.register('sourceJar', Jar) {
  classifier = 'sources'
  from sourceSets.main.allJava
}

copyJarToPlugins.dependsOn(deleteOldPluginJar)
jar.finalizedBy(copyJarToPlugins)

publishing {
  repositories {
    maven {
      url getDeployUrl(projectId)
      credentials {
        username = deploy_token_name
        password = deploy_token_key
      }
    }
  }
}


def getDeployUrl(int id) {
  return git_url + 'api/v4/projects/' + id + '/packages/maven'
}